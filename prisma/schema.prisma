// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  user
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      UserRole @default(user)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Expense Expense[]

  @@map("users")
}

model Expense {
  id                Int             @id @default(autoincrement())
  title             String
  description       String?
  value             Float
  date              DateTime
  createdAt         DateTime        @default(now()) @map("created_at")
  updatedAt         DateTime        @updatedAt @map("updated_at")
  userId            Int             @map("user_id")
  user              User            @relation(fields: [userId], references: [id])
  expenseCategoryId Int             @map("expense_category_id")
  expenseCategory   ExpenseCategory @relation(fields: [expenseCategoryId], references: [id])

  @@map("expenses")
}

model ExpenseCategory {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  Expense   Expense[]

  @@map("expense_categories")
}
